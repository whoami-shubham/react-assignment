{"version":3,"sources":["services/apiConfig.js","views/User/User.js","services/users.js","utils/localStorage.js","views/User/UserModal.js","views/Home/Home.js","views/Likes/Likes.js","App.js","reportWebVitals.js","index.js"],"names":["URLS","getAvatarURL","username","Meta","Card","User","props","user","openModal","setCurUser","deleteUser","likeUser","name","email","phone","website","isLiked","onLike","xs","sm","md","lg","xl","className","cover","alt","src","actions","size","onClick","HeartFilled","HeartOutlined","EditOutlined","DeleteFilled","title","MailOutlined","PhoneOutlined","GlobalOutlined","fetchUserData","a","result","fetch","response","json","forEach","console","log","initialState","users","loadStateFromLocalStorage","serializedState","localStorage","getItem","isStateEmpty","undefined","JSON","parse","length","usersData","saveStateIntoLocalStorage","state","stringify","setItem","error","cloneObject","object","UserModal","isModalVisible","handleCancel","updateUserDetails","useState","formValues","setFormValues","visible","onOk","onCancel","labelCol","span","wrapperCol","key","onFinish","initialValues","onFieldsChange","_","allFields","newDetails","field","value","Item","label","rules","required","message","Home","setUsers","curUser","setIsModalVisible","isLoading","setIsLoading","updateUsersStateAndLocalStorage","newUsers","idx","filter","usr","fetchUsers","useEffect","type","map","Likes","likedUsers","setLikedUsers","countLikes","orientation","bordered","itemLayout","dataSource","renderItem","avatar","App","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.392a540b.chunk.js","sourcesContent":["export const URLS = {\r\n    USERS_DATA:\"https://jsonplaceholder.typicode.com/users\",\r\n} \r\nexport const getAvatarURL = (username)=>`https://avatars.dicebear.com/v2/avataaars/${username}.svg?options[mood][]=happy`","import React from \"react\";\r\nimport { Card, Col, Button } from \"antd\";\r\nimport {\r\n  PhoneOutlined,\r\n  HeartOutlined,\r\n  HeartFilled,\r\n  EditOutlined,\r\n  DeleteFilled,\r\n  MailOutlined,\r\n  GlobalOutlined,\r\n} from \"@ant-design/icons\";\r\nimport \"antd/dist/antd.css\";\r\nimport \"./user.css\";\r\nimport { getAvatarURL } from \"../../services/apiConfig\";\r\nconst { Meta } = Card;\r\n\r\nexport default function User(props) {\r\n  const { user, openModal, setCurUser, deleteUser, likeUser } = props;\r\n  const { name, username, email, phone, website, isLiked } = user;\r\n\r\n  const onLike = () => {\r\n    likeUser(user);\r\n  };\r\n  const onEdit = () => {\r\n    setCurUser(user);\r\n    openModal();\r\n  };\r\n  const onDelete = () => {\r\n    deleteUser(user);\r\n  };\r\n  return (\r\n    <Col xs={20} sm={20} md={10} lg={8} xl={6}>\r\n      <Card\r\n        className=\"user-card\"\r\n        cover={\r\n          <img\r\n            alt=\"avatar\"\r\n            src={getAvatarURL(username)}\r\n            className=\"card-image\"\r\n          />\r\n        }\r\n        actions={[\r\n          <Button size=\"small\" onClick={onLike}>\r\n            {isLiked ? (\r\n              <HeartFilled className=\"heart-icon\" />\r\n            ) : (\r\n              <HeartOutlined className=\"heart-icon\" onClick={onLike} />\r\n            )}\r\n          </Button>,\r\n          <Button size=\"small\" onClick={onEdit}>\r\n            <EditOutlined key=\"edit\" />\r\n          </Button>,\r\n          <Button size=\"small\" onClick={onDelete}>\r\n            <DeleteFilled key=\"delete\" />\r\n          </Button>,\r\n        ]}\r\n      >\r\n        <Meta title={name} className=\"meta\" />\r\n        <div className=\"col\">\r\n          <div className=\"row card-item\">\r\n            <MailOutlined /> <span className=\"card-item-text\">{email}</span>\r\n          </div>\r\n          <div className=\"row card-item\">\r\n            <PhoneOutlined /> <span className=\"card-item-text\">{phone}</span>\r\n          </div>\r\n          <div className=\"row card-item\">\r\n            <GlobalOutlined /> <span className=\"card-item-text\">{website}</span>\r\n          </div>\r\n        </div>\r\n      </Card>\r\n    </Col>\r\n  );\r\n}\r\n","import { URLS } from \"./apiConfig\";\r\n\r\nexport async function fetchUserData() {\r\n  let result = [];\r\n  try {\r\n    const response = await fetch(URLS.USERS_DATA);\r\n    result = await response.json();\r\n    result.forEach((user) => {\r\n      user.isLiked = false;\r\n    });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n  return result;\r\n}\r\n","import { fetchUserData } from \"../services/users\";\r\n\r\nconst initialState = {\r\n  users: [],\r\n};\r\n\r\nexport const loadStateFromLocalStorage = async () => {\r\n  try {\r\n    const serializedState = localStorage.getItem(\"data\");\r\n    const isStateEmpty =\r\n      serializedState === null || serializedState === undefined;\r\n    const result = !isStateEmpty ? JSON.parse(serializedState) : null;\r\n    // if there is no data present in localStorage fetch from API\r\n    if (isStateEmpty || !result || !result.users || !result.users.length) {\r\n      const usersData = await fetchUserData();\r\n      const state = { users: usersData };\r\n      saveStateIntoLocalStorage(state);\r\n      return state;\r\n    }\r\n\r\n    return result;\r\n  } catch (error) {\r\n    console.log(\"error : \", error);\r\n    return initialState;\r\n  }\r\n};\r\n\r\nexport function saveStateIntoLocalStorage(state) {\r\n  try {\r\n    const serializedState = JSON.stringify(state);\r\n    localStorage.setItem(\"data\", serializedState);\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n}\r\n\r\nexport function clearState() {\r\n  try {\r\n    localStorage.removeItem(\"data\");\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n}\r\n\r\nexport function cloneObject(object) {\r\n  if (!object) {\r\n    return object;\r\n  }\r\n  return JSON.parse(JSON.stringify(object));\r\n}\r\n","import React, {useState} from \"react\";\r\nimport { Modal, Form, Input } from \"antd\";\r\n\r\nexport default function UserModal(props) {\r\n  const { user, isModalVisible, handleCancel, updateUserDetails } = props;\r\n  const [formValues,setFormValues] = useState(null);\r\n  if(!user){\r\n      return null;\r\n  }\r\n\r\n  const { name, email, phone, website } = user;\r\n \r\n  const handleOk = () => {\r\n      if(formValues){\r\n        updateUserDetails({...user,...formValues});\r\n      }\r\n      handleCancel();\r\n  };\r\n\r\n  const onFinish = () => {};\r\n  const layout = {\r\n    labelCol: { span: 8 },\r\n    wrapperCol: { span: 16 },\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      title=\"Basic Modal\"\r\n      visible={isModalVisible}\r\n      onOk={handleOk}\r\n      onCancel={handleCancel}\r\n    >\r\n      <Form\r\n        {...layout}\r\n        name=\"basic\"\r\n        key={isModalVisible}\r\n        onFinish={onFinish}\r\n        initialValues={{\r\n          name: name,\r\n          email: email,\r\n          phone: phone,\r\n          website: website,\r\n        }}\r\n        onFieldsChange={(_, allFields) => {\r\n           const newDetails = {};\r\n           allFields.forEach((field)=>{\r\n                newDetails[`${field.name[0]}`] = field.value\r\n           });\r\n           setFormValues(newDetails);\r\n        }}\r\n      >\r\n        <Form.Item\r\n          label=\"Name\"\r\n          name=\"name\"\r\n          rules={[{ required: true, message: \"This field is required\" }]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label=\"Email\"\r\n          name=\"email\"\r\n          rules={[{ required: true, message: \"This field is required\" }]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item\r\n          label=\"Phone\"\r\n          name=\"phone\"\r\n          rules={[{ required: true, message: \"This field is required\" }]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item\r\n          label=\"Website\"\r\n          name=\"website\"\r\n          rules={[{ required: true, message: \"This field is required\" }]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n      </Form>\r\n    </Modal>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Alert } from \"antd\";\r\nimport User from \"../User/User\";\r\nimport {\r\n  cloneObject,\r\n  loadStateFromLocalStorage,\r\n  saveStateIntoLocalStorage,\r\n} from \"../../utils/localStorage\";\r\nimport UserModal from \"../User/UserModal\";\r\nimport \"./home.css\";\r\n\r\nfunction Home() {\r\n  const [users, setUsers] = useState([]);\r\n  const [curUser, setCurUser] = useState(null);\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const updateUsersStateAndLocalStorage = (users) => {\r\n    setUsers(users);\r\n    saveStateIntoLocalStorage({ users: users });\r\n  };\r\n\r\n  // like user\r\n  const likeUser = (user) => {\r\n    if (!user || !user.username) {\r\n      return;\r\n    }\r\n    const newUsers = cloneObject(users);\r\n    for (let idx in newUsers) {\r\n      if (newUsers[idx].username === user.username) {\r\n        newUsers[idx] = { ...newUsers[idx], isLiked: !newUsers[idx].isLiked };\r\n        break;\r\n      }\r\n    }\r\n    updateUsersStateAndLocalStorage(newUsers);\r\n  };\r\n  // update user details using modal\r\n  const updateUserDetails = (user) => {\r\n    if (!user || !user.username) {\r\n      return;\r\n    }\r\n    const newUsers = cloneObject(users);\r\n    for (let idx in newUsers) {\r\n      if (newUsers[idx].username === user.username) {\r\n        newUsers[idx] = { ...user };\r\n        break;\r\n      }\r\n    }\r\n    updateUsersStateAndLocalStorage(newUsers);\r\n  };\r\n\r\n  // delete user\r\n  const deleteUser = (user) => {\r\n    if (!user || !user.username) {\r\n      return;\r\n    }\r\n    const newUsers = users.filter((usr) => usr.username !== user.username);\r\n    updateUsersStateAndLocalStorage(newUsers);\r\n  };\r\n\r\n  const fetchUsers = async () => {\r\n    setIsLoading(true);\r\n    const result = await loadStateFromLocalStorage();\r\n    setUsers(result.users);\r\n    setIsLoading(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchUsers();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      {isLoading ? (\r\n        <Alert message=\"Loading...\" type=\"info\" />\r\n      ) : (\r\n        <div className=\"users-list\">\r\n          {users && users.length ? (\r\n            users.map((user) => {\r\n              return (\r\n                <User\r\n                  key={user.username}\r\n                  user={user}\r\n                  openModal={() => setIsModalVisible(true)}\r\n                  setCurUser={setCurUser}\r\n                  deleteUser={deleteUser}\r\n                  likeUser={likeUser}\r\n                />\r\n              );\r\n            })\r\n          ) : (\r\n            <Alert\r\n              message=\"No Data is present refesh page to fetch data\"\r\n              type=\"info\"\r\n            />\r\n          )}\r\n          <UserModal\r\n            key={curUser && curUser.username}\r\n            user={curUser}\r\n            isModalVisible={isModalVisible}\r\n            handleCancel={() => setIsModalVisible(false)}\r\n            updateUserDetails={updateUserDetails}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React,{useState,useEffect} from 'react'\r\nimport { loadStateFromLocalStorage} from \"../../utils/localStorage\";\r\nimport { List,Avatar, Divider } from 'antd';\r\n\r\nimport \"./likes.css\"\r\nimport { getAvatarURL } from '../../services/apiConfig';\r\nexport default function Likes() {\r\n    const [likedUsers,setLikedUsers] = useState([]);\r\n\r\n    const countLikes = async ()=>{\r\n        const result = await loadStateFromLocalStorage();\r\n        let users = result.users;\r\n        users = users.filter((user)=>user.isLiked);\r\n        setLikedUsers(users);\r\n    }\r\n\r\n    useEffect(()=>{\r\n       countLikes();\r\n    },[])\r\n    return (\r\n        <div className=\"liked-users-list\">\r\n            <Divider orientation=\"left\">Total liked users : {likedUsers.length}</Divider>\r\n            <List\r\n      bordered\r\n      itemLayout=\"horizontal\"\r\n      dataSource={likedUsers}\r\n      renderItem={user => (\r\n        <List.Item>\r\n        <List.Item.Meta\r\n          avatar={<Avatar src={getAvatarURL(user.username)} />}\r\n          title={<p>{user.name}</p>}\r\n        />\r\n      </List.Item>\r\n      )}\r\n    />\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport \"./App.css\";\nimport Home from \"./views/Home/Home\";\nimport Likes from \"./views/Likes/Likes\";\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route path=\"/likes\" component={Likes} />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}